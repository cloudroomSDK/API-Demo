<!-- 视频通话 -->
<template>
	<view class="content">
		<view class="start" v-if="(curShareState && isMyShare) || !curShareState">
			<view class="main">
				<view class="text-box">
					<text class="text">房间号：{{roomId}}</text>
					<text class="text">用户名：{{userInfo.userId}}</text>
					<text class="text">分辨率：720P</text>
					<text class="text">请在其他设备上使用观众身份进入相同的房间观看</text>
				</view>
				<view class="shareToast">
					<text class="text" v-if="isMyShare">您正在共享屏幕</text>
				</view>
				<view class="btn-center">
					<button class="btn primary" @click="startScreenShare" v-if="!curShareState">
						<text class="btn-text">开始屏幕共享</text>
					</button>
					<button class="btn danger" @click="stopScreenShare" v-if="isMyShare">
						<text class="btn-text">停止屏幕共享</text>
					</button>
				</view>
			</view>

			<view class="btn-bottom">
				<button class="btn primary" @click="toggleMicState">
					<text class="btn-text">{{curMicState ? '关闭麦克风':'打开麦克风'}}</text>
				</button>
			</view>
		</view>
		<view class="video-box" v-else>
			<rtcsdk-screen-view class="screenShareUIView" />
		</view>
	</view>
</template>

<script>
	import mixin from './mixin'
	import { RtcsdkScreenView } from '@/RTCSDK/component';
	
	export default {
		mixins: [mixin],
		components: {
			RtcsdkScreenView
		},
		data() {
			return {
				roomId: '',
				curMicState: true, //麦克风开启状态
				curShareState: false, //房间内是否开启了屏幕共享
				isMyShare: false, //是否自己开启的屏幕共享
			};
		},
		onLoad({ roomId }) {
			this.roomId = roomId;
			this.curShareState = this.RTCSDK.isScreenShareStarted();
			
			const cfg = this.RTCSDK.getScreenShareCfg();
			// 共享帧率
			cfg.maxFps = 12;
			// 共享码率
			cfg.maxBps = 2000 * 1000;
			this.RTCSDK.setScreenShareCfg(cfg);
		},
		mounted() {
			if (this.curMicState) {
				this.RTCSDK.openMic(this.userInfo.userId);
			}
		},
		methods: {
			handleEventsPage(bool) {
				const handle = this.RTCSDK[bool ? 'on' : 'off'];
				handle("audioStatusChanged", this._audioStatusChanged);
				handle("notifyScreenShareStarted", this._notifyScreenShareStarted);
				handle("notifyScreenShareStopped", this._notifyScreenShareStopped);
				handle("stopScreenShareRslt", this._stopScreenShareRslt);
			},
			//开关麦克风
			toggleMicState() {
				this.curMicState = !this.curMicState;
				if (this.curMicState) {
					this.RTCSDK.openMic(this.userInfo.userId);
				} else {
					this.RTCSDK.closeMic(this.userInfo.userId);
				}
			},
			// 开启屏幕共享
			startScreenShare() {
				console.log('------startScreenShare')
				this.curShareState = true;
				this.isMyShare = true;
				this.RTCSDK.startScreenShare({
					title: "Uniapp Api Demo",
					contentText: "正在进行屏幕共享"
				});
			},
			// 停止屏幕共享
			stopScreenShare() {
				this.curShareState = false;
				this.isMyShare = false;
				this.RTCSDK.stopScreenShare();
			},
			//ios点击系统层的"停止直播"，会进入该回调
			_stopScreenShareRslt({sdkErr}){
				this.curShareState = false;
				this.isMyShare = false;
			},
			_audioStatusChanged({ userID, newStatus }) {
				if (userID == this.userInfo.userId) {
					//进入到这里可能是别人改变了自己的麦克风开关
					this.curMicState = newStatus === 3;
				}
			},
			_notifyScreenShareStarted(e) {
				this.curShareState = true;
			},
			_notifyScreenShareStopped(e) {
				this.curShareState = false;
				this.isMyShare = false;
			}
		}
	}
</script>

<style lang="scss">
	.content {
		flex: 1;
		background-color: #333;

		.start {
			flex: 1;

			.main {
				flex: 1;
				align-items: center;

				.text-box {
					margin-top: 70rpx;
					width: 614rpx;

					.text {
						font-size: 28rpx;
						line-height: 40rpx;
						color: $uni-bg-color;
					}
				}

				.shareToast {
					margin-top: 106rpx;
					margin-bottom: 72rpx;
					height: 36rpx;

					.text {
						height: 36rpx;
						font-size: 36rpx;
						line-height: 36rpx;
						color: $uni-bg-color;
					}
				}

				.btn-center {
					.btn {
						width: 372rpx;
						height: 130rpx;
						line-height: 130rpx;
					}
				}
			}

			.btn-bottom {
				margin-bottom: 72rpx;
				align-items: center;

				.btn {
					width: 250rpx;
					height: 60rpx;

					.btn-text {
						height: 60rpx;
						line-height: 60rpx;
						font-size: 28rpx;
					}
				}
			}
		}

		.video-box {
			flex: 1;

			.screenShareUIView {
				flex: 1;
			}
		}
	}
</style>